* Java API

您可通过以 Java 语言编写的 API 使用 Android OS 的整个功能集。这些 API 形成创建 Android应用所需的构建块，它们可简化核心模块化系统组件和服务的重复使用，包括以下组件和服务：

丰富、可扩展的视图系统，可用以构建应用的 UI，包括列表、网格、文本框、按钮甚至可嵌入的网络浏览器资源管理器，用于访问非代码资源，例如本地化的字符串、图形和布局文件通知管理器，可让所有应用在状态栏中显示自定义提醒Activity 管理器，用于管理应用的生命周期，提供常见的导航返回栈内容提供程序，可让应用访问其他应用（例如“联系人”应用）中的数据或者共享其自己的数据开发者可以完全访问 Android 系统应用使用的框架 API。


1. android.app - 提供应用程序模型的访问，是所有 Android 应用程序的基石。

1. android.content - 方便应用程序之间，应用程序组件之间的内容访问，发布，消息传递。

1. android.database - 用于访问内容提供者发布的数据，包含 SQLite 数据库管理类。

1. android.opengl - OpenGL ES 3D 图片渲染 API 的 Java 接口。

1. android.os - 提供应用程序访问标注操作系统服务的能力，包括消息，系统服务和进程间通信。

1. android.text - 在设备显示上渲染和操作文本。

1. android.view - 应用程序用户界面的基础构建块。

1. android.widget - 丰富的预置用户界面组件集合，包括按钮，标签，列表，布局管理，单选按钮等。

1. android.webkit - 一系列类的集合，允许为应用程序提供内建的 Web 浏览能力。


** 常说的四大组件


- Activities	描述UI，并且处理用户与机器屏幕的交互。

- Services	处理与应用程序关联的后台操作。

- Broadcast Receivers	处理Android操作系统和应用程序之间的通信。

- Content Providers	处理数据和数据库管理方面的问题。


*** Activities

    一个活动标识一个具有用户界面的单一屏幕。举个例子，一个邮件应用程序可以包含一个活动用于显示新邮件列表，另一个活动用来编写邮件，再一个活动来阅读邮件。当应用程序拥有多于一个活动，其中的一个会被标记为当应用程序启动的时候显示。

一个活动是Activity类的一个子类，如下所示：

#+BEGIN_SRC java
  public class MainActivity extends Activity {

  }
#+END_SRC


*** Services

服务是运行在后台，执行长时间操作的组件。举个例子，服务可以是用户在使用不同的程序时在后台播放音乐，或者在活动中通过网络获取数据但不阻塞用户交互。

一个服务是Service类的子类，如下所示：

#+BEGIN_SRC java
  public class MyService extends Service {

  }
#+END_SRC

*** Broadcast Receivers
  广播接收器简单地响应从其他应用程序或者系统发来的广播消息。举个例子，应用程序可以发起广播来让其他应用程序知道一些数据已经被下载到设备，并且可以供他们使用。因此广播接收器会拦截这些通信并采取适当的行动。

  广播接收器是BroadcastReceiver类的一个子类，每个消息以Intent对象的形式来广播。

#+BEGIN_SRC java
  public class MyReceiver  extends  BroadcastReceiver {

  }
#+END_SRC

*** Content Providers

内容提供者组件通过请求从一个应用程序到另一个应用程序提供数据。这些请求由ContentResolver类的方法来处理。这些数据可以是存储在文件系统、数据库或者其他其他地方。

内容提供者是ContentProvider类的子类，并实现一套标准的API，以便其他应用程序来执行事务。

#+BEGIN_SRC java
public class MyContentProvider extends  ContentProvider {

}
#+END_SRC
