* fragment

Fragment是Android3.0后引入的一个新的API，他出现的初衷是为了适应大屏幕的平板电脑， 当然现在他仍然是平板APP UI设计的宠儿，而且我们普通手机开发也会加入这个Fragment， 我们可以把他看成一个小型的Activity，又称Activity片段！

如果一个很大的界面，我们就一个布局，写起界面来会有多麻烦，而且如果组件多的话是管理起来也很麻烦！而使用Fragment 我们可以把屏幕划分成几块，然后进行分组，进行一个模块化的管理！从而可以更加方便的在 运行过程中动态地更新Activity的用户界面！另外Fragment并不能单独使用，他需要嵌套在Activity 中使用，尽管他拥有自己的生命周期，但是还是会受到宿主Activity的生命周期的影响，比如Activity 被destory销毁了，他也会跟着销毁！

** fragment要点

1. 3.0版本后引入,即minSdk要大于11

1. Fragment需要嵌套在Activity中使用,当然也可以嵌套到另外一个Fragment中,但这个被嵌套的Fragment也是需要嵌套在Activity中的,间接地说,Fragment还是需要嵌套在Activity中!! 受寄主Activity的生命周期影响,当然他也有自己的生命周期!另外不建议在Fragment里面嵌套Fragment因为嵌套在里面的Fragment生命周期不可控!

1. 官方文档说创建Fragment时至少需要实现三个方法:onCreate( ),onCreateView( ),OnPause( ); 不过貌似只写一个onCreateView也是可以的...

1. Fragment的生命周期和Activity有点类似:三种状态:

  - Resumed:在允许中的Fragment可见

  - Paused:所在Activity可见,但是得不到焦点

  - Stoped:

    1. 调用addToBackStack(),Fragment被添加到Bcak栈

    1. 该Activity转向后台,或者该Fragment被替换/删除

ps:停止状态的fragment仍然活着(所有状态和成员信息被系统保持着),然而,它对用户不再可见,并且如果activity被干掉,他也会被干掉.



android.support.v4.app.fragment it's the package for the old Android support fragments.

androidx.fragment.app.FragmentActivity it's where the new fragments are. This came to replace the previous package because it's a much cleaner namespace. This is also known as Android X.


Summary… in three bullets
1. Never use the native Fragment class (android.app.Fragment)

1. If you are already using AndroidX, use androidx.fragment.app.Fragment (otherwise consider a migration to AndroidX)

1. If you don’t want to use AndroidX yet, simply use the Support Lib (android.support.v4.app.Fragment)
