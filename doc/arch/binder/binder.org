Android团队想要实现进程之间的通信，需要解决以下几个问题：

- 如何知道客户端需要调用哪个进程以及该进程中的函数

- 客户端如何将函数形参发送给远程进程中的函数，以及如何将远程进程函数计算结果返回客户端

- 如何去屏蔽底层通信细节，让实现客户端调用远程函数就像调用本地函数一样


第一个问题，很容易解决，只要给每个需要远程通信的类唯一标识就可以通过 ~包名+类名~ 的字符串就可以做到，然后在类里面给每个函数编号即可对函数唯一编码。

第二个问题，定义一个可打包的接口Parcelable，这个接口提供2个重要函数，分别是将对象中的属性写入到数组和从数组中的数据还原对象，每个可以发送到远程函数作为形参的对象只需实现Parcelable对象即可。Parcelable具体使用不再本文讨论范围。

第三个问题，为了屏蔽进程之间的通信细节，那么Android团队肯定在想，定义一个类，由这个类来实现这些细节。这个类应该做哪些事情呢？首先，这个类得帮用户发送远程请求并将拿到返回结果提交给用户，这是最重要的功能了，有了这个功能，妈妈再也不用担心我的进程通信。其次，如果我想实现服务端，什么时候客户端调用我了，这些细节不用用户操心。当然，这个类还要帮用户封装更多细节。既然打算定义这个类了，那总得取个响当当的名称吧，什么？你说取名为Binder，好吧，那就叫Binder吧。Binder类既然封装很多功能，那该怎么用这个类呢？让客户端去继承还是服务端继承呢？答案是服务端。接下来有个约定，本文后面所指的Binder类都是指远程服务端的对象。服务端想要实现被跨进程访问，就必须继承Binder类。

作者：huachao1001
链接：https://www.jianshu.com/p/04a034cbbc27
来源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
